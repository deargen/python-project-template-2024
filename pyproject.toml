[build-system]
requires = ["setuptools>=60", "versioneer[toml]==0.29"]
build-backend = "setuptools.build_meta"

[tool.versioneer]
VCS = "git"
style = "pep440"
versionfile_source = "src/mlproject/_version.py" # CHANGE
versionfile_build = "mlproject/_version.py"      # CHANGE
tag_prefix = "v"
parentdir_prefix = "mlproject-"                  # CHANGE

[project]
name = "mlproject" # CHANGE
dynamic = ["version"]
description = "Innerverz Python project template" # OPTIONALLY CHANGE
authors = [
  { name = "Kiyoon Kim" }, # OPTIONALLY CHANGE
]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.10"
classifiers = [
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
keywords = ["development", "template", "innerverz"]
dependencies = [
  "rich >= 13.6.0",
  # ADD MORE LATER (torch, torchvision, ...)
]

[project.optional-dependencies]
dev = ["black >= 23.9.0"]
test = ["pytest >= 7.4.0", "pytest-cov >= 4.1.0"]

[project.urls]
"Homepage" = "https://github.com/innerverz-ai/python-project-template-2023" # OPTIONALLY CHANGE

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
addopts = "--cov=mlproject" # CHANGE (name of the importing module name)
testpaths = ["tests"]

[tool.isort]
profile = "black"
known_third_party = ["wandb"]

[tool.ruff]
# Black will enforce line length to be 88, except for docstrings and comments.
# We set it to 120 so we have more space for docstrings and comments.
line-length = 120

[tool.ruff.lint]
# OPTIONALLY ADD MORE LATER
select = [
  # flake8
  "E",
  "F",
  "W",
  "B",    # Bugbear
  "D",    # Docstring
  "N",    # Naming
  "C4",   # flake8-comprehensions
  "UP",   # pyupgrade
  "SIM",  # simplify
  "RUF",  # ruff-specific
  "RET",  # return
  "PTH",  # path
  "NPY",  # numpy

  # Not important
  "T10",  # debug statements
  "T20",  # print statements
]

ignore = [
  "E402",    # Module level import not at top of file
  "D100",    # Missing docstring in public module
  "D417",    # require documentation for every function parameter.
  "D401",    # require an imperative mood for all docstrings.
  "PTH123",  # Path.open should be used instead of built-in open
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pyright]
include = ["src"]

typeCheckingMode = "standard"
autoSearchPaths = true
useLibraryCodeForTypes = true
autoImportCompletions = true
diagnosticsMode = "openFilesOnly"

reportUnusedImports = false
reportUnusedVariable = false
# reportUnusedClass = "warning"
# reportUnusedFunction = "warning"
reportUndefinedVariable = false  # ruff handles this with F821

pythonVersion = "3.10"
pythonPlatform = "Linux"

[tool.coverage.report]
omit = [
  "src/mlproject/_version.py", # CHANGE
  # OPTIONALLY ADD MORE LATER
]
