name: Style check on changed files

on: pull_request

jobs:
  # ------------------------------------------------------------------------------------------------------------------------------------------------
  # Event `pull_request`: Compare the last commit of the main branch or last remote commit of the PR branch -> to the current commit of a PR branch.
  # ------------------------------------------------------------------------------------------------------------------------------------------------
  ruff-format-only-changed:
    name: ruff-format-changed
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # OR "2" -> To retrieve the preceding commit.

      - name: Get all changed python files
        id: changed-python-files
        uses: tj-actions/changed-files@v42
        with:
          # Avoid using single or double quotes for multiline patterns
          files: |
            **.py

      - name: Set up Python
        if: steps.changed-python-files.outputs.any_changed == 'true'
        uses: actions/setup-python@v5
        with:
          python-version-file: pyproject.toml
      - name: Install ruff
        if: steps.changed-python-files.outputs.any_changed == 'true'
        run: |
          pip3 install -r <(cat requirements_dev.txt | grep '^ruff==')
      - name: Run ruff
        if: steps.changed-python-files.outputs.any_changed == 'true'
        run: |
          set +e  # Do not exit shell on app failure
          out=$(ruff format --check --diff ${{ steps.changed-python-files.outputs.all_changed_files }} 2> app_stderr.txt)
          exit_code=$?
          err=$(<app_stderr.txt)

          # Display the raw output in the step
          echo "${out}"
          echo "${err}"

          # Display the Markdown output in the job summary
          echo "\`\`\`diff" >> $GITHUB_STEP_SUMMARY
          echo "${out}" >> $GITHUB_STEP_SUMMARY
          echo "${err}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

          # Exit with the exit-code returned by the app
          exit ${exit_code}

  ruff-isort-only-changed:
    name: ruff-isort-changed
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # OR "2" -> To retrieve the preceding commit.

      - name: Get all changed python files
        id: changed-python-files
        uses: tj-actions/changed-files@v42
        with:
          # Avoid using single or double quotes for multiline patterns
          files: |
            **.py

      - name: Set up Python
        if: steps.changed-python-files.outputs.any_changed == 'true'
        uses: actions/setup-python@v5
        with:
          python-version-file: pyproject.toml
      - name: Install ruff
        if: steps.changed-python-files.outputs.any_changed == 'true'
        run: |
          pip3 install -r <(cat requirements_dev.txt | grep '^ruff==')
      - name: Run ruff isort
        if: steps.changed-python-files.outputs.any_changed == 'true'
        run: |
          set +e  # Do not exit shell on app failure
          out=$(ruff --select I --diff ${{ steps.changed-python-files.outputs.all_changed_files }} 2> app_stderr.txt)
          exit_code=$?
          err=$(<app_stderr.txt)

          # Display the raw output in the step
          echo "${out}"
          echo "${err}"

          # Display the Markdown output in the job summary
          echo "\`\`\`diff" >> $GITHUB_STEP_SUMMARY
          echo "${out}" >> $GITHUB_STEP_SUMMARY
          echo "${err}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

          # Exit with the exit-code returned by the app
          exit ${exit_code}

  ruff-only-changed:
    name: ruff-changed
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # OR "2" -> To retrieve the preceding commit.

      - name: Get all changed python files
        id: changed-python-files
        uses: tj-actions/changed-files@v42
        with:
          # Avoid using single or double quotes for multiline patterns
          files: |
            **.py

      - name: Set up Python
        if: steps.changed-python-files.outputs.any_changed == 'true'
        uses: actions/setup-python@v5
        with:
          python-version-file: pyproject.toml
      - name: Install ruff
        if: steps.changed-python-files.outputs.any_changed == 'true'
        run: |
          pip3 install -r <(cat requirements_dev.txt | grep '^ruff==')
      - name: Run ruff
        if: steps.changed-python-files.outputs.any_changed == 'true'
        run: |
          set +e  # Do not exit shell on ruff failure

          nonzero_exit=0
          for file in ${{ steps.changed-python-files.outputs.all_changed_files }}; do
            out=$(ruff check "$file" 2> ruff_stderr.txt)
            exit_code=$?
            err=$(<ruff_stderr.txt)

            if [[ $exit_code -ne 0 ]]; then
              nonzero_exit=$exit_code
            fi

            if [[ -n "$out" ]]; then
              # Display the raw output in the step
              echo "${out}"
              # Display the Markdown output in the job summary
              echo "\`\`\`python" >> $GITHUB_STEP_SUMMARY
              echo "${out}" >> $GITHUB_STEP_SUMMARY
              echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            fi
            if [[ -n "$err" ]]; then
              echo "${err}"
              echo "\`\`\`python" >> $GITHUB_STEP_SUMMARY
              echo "${err}" >> $GITHUB_STEP_SUMMARY
              echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            fi

            out=$(ruff check --diff "$file" 2> ruff_stderr.txt)
            err=$(<ruff_stderr.txt)

            if [[ -n "$out" ]]; then
              # Display the raw output in the step
              echo "${out}"
              # Display the Markdown output in the job summary
              echo "\`\`\`diff" >> $GITHUB_STEP_SUMMARY
              echo "${out}" >> $GITHUB_STEP_SUMMARY
              echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            fi
            if [[ -n "$err" ]]; then
              echo "${err}"
              echo "\`\`\`python" >> $GITHUB_STEP_SUMMARY
              echo "${err}" >> $GITHUB_STEP_SUMMARY
              echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            fi
          done

          # Exit with the first non-zero exit-code returned by ruff
          # or just zero if all passed
          exit ${nonzero_exit}
