name: Deploy a new version

on:
  workflow_dispatch:
    inputs:
      version_tag:
        description: 'Version tag'
        required: true
        default: v0.1.0
      dry_run:
        type: boolean
        description: 'Dry run'
        default: false

jobs:
  dry-run:
    if: ${{ github.event.inputs.dry_run == 'true' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Push new version tag temporarily for changelog generation
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git tag -a ${{ github.event.inputs.version_tag }} -m ${{ github.event.inputs.version_tag }}
          git push --tags

      - name: Get CHANGELOG
        id: changelog-dry-run
        uses: requarks/changelog-action@v1.10.2
        with:
          includeInvalidCommits: true
          excludeTypes: build,docs,style,other
          token: ${{ github.token }}
          tag: ${{ github.event.inputs.version_tag }}

      - name: Display CHANGELOG
        if: ${{ github.event.inputs.dry_run == 'true' }}
        run: |
          echo '${{ steps.changelog-dry-run.outputs.changes }}'
          echo '${{ steps.changelog-dry-run.outputs.changes }}' > "$GITHUB_STEP_SUMMARY"

      - name: Remove temporary version tag
        if: ${{ github.event.inputs.dry_run == 'true' }}
        run: |
          git tag -d ${{ github.event.inputs.version_tag }}
          git push origin --delete ${{ github.event.inputs.version_tag }}

  deploy:
    if: ${{ github.event.inputs.dry_run == 'false' }}
    runs-on: ubuntu-latest
    environment: mkdocs

    steps:
      - uses: actions/checkout@v4
      - name: Push new version tag temporarily for changelog generation
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git tag -a ${{ github.event.inputs.version_tag }} -m ${{ github.event.inputs.version_tag }}
          git push --tags

      - name: Update CHANGELOG
        id: changelog
        uses: requarks/changelog-action@v1.10.2
        with:
          includeInvalidCommits: true
          excludeTypes: build,docs,style,other
          token: ${{ github.token }}
          tag: ${{ github.event.inputs.version_tag }}
          changelogFilePath: docs/CHANGELOG.md

      - name: Commit docs/CHANGELOG.md and update tag
        run: |
          git tag -d ${{ github.event.inputs.version_tag }}
          git push origin --delete ${{ github.event.inputs.version_tag }}
          git add docs/CHANGELOG.md
          git commit -m "docs: update docs/CHANGELOG.md for ${{ github.event.inputs.version_tag }} [skip ci]"
          git tag -a ${{ github.event.inputs.version_tag }} -m ${{ github.event.inputs.version_tag }}
          git push
          git push --tags

      - name: Create Release
        uses: ncipollo/release-action@v1.14.0
        with:
          allowUpdates: true
          draft: false
          makeLatest: true
          name: ${{ github.event.inputs.version_tag }}
          tag: ${{ github.event.inputs.version_tag }}
          body: ${{ steps.changelog.outputs.changes }}

      - name: Run mkdocs
        run: |
          pip3 install uv
          uv venv
          source .venv/bin/activate
          uv pip install -r deps/x86_64-unknown-linux-gnu/requirements_docs.txt

          set +e  # Do not exit shell on failure
          export HTTPS_REMOTE="https://gitlab-ci-token:${{ secrets.GL_TOKEN }}@gitlab.com/${{ vars.GL_PROJECT }}.git"

          git remote add gitlab "$HTTPS_REMOTE"
          git branch -D gl-pages
          git pull gitlab gl-pages:gl-pages

          # Delete the latest page because we're going to make it as an alias to the latest version.
          mike delete --deploy-prefix public -r "$HTTPS_REMOTE" -b gl-pages latest
          out=$(mike deploy --deploy-prefix public -r "$HTTPS_REMOTE" -p -b gl-pages -u ${{ github.event.inputs.version_tag }} latest 2> stderr.txt)
          exit_code=$?
          err=$(<stderr.txt)

          mike set-default --deploy-prefix public -r "$HTTPS_REMOTE" -p -b gl-pages latest

          # Display the raw output in the step
          echo "${out}"
          echo "${err}"

          # Display the Markdown output in the job summary
          { echo "\`\`\`python"; echo "${out}"; echo "${err}"; echo "\`\`\`"; } >> "$GITHUB_STEP_SUMMARY"

          exit ${exit_code}
